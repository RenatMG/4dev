{"version":3,"file":"static/js/468.4314a608.chunk.js","mappings":"+MACA,GAAgB,MAAQ,yBAAyB,OAAS,0BAA0B,MAAQ,0B,mBCyD5F,EApDsB,WAElB,IAAAA,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAKF,EAALE,MAAOC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SACtBC,GAAyCC,EAAAA,EAAAA,MAAjCC,EAAOF,EAAPE,QAASC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAc/B,OARAC,EAAAA,EAAAA,YAAU,WACND,GAAM,WACIN,GACFC,EAAS,GAEjB,GACJ,GAAG,CAACD,EAAOC,EAAUK,KAGjBE,EAAAA,EAAAA,MAAA,QACIC,SAAUJ,GAdD,SAACK,GACdX,EAAMW,EACV,IAaQC,UAAWC,EAAAA,KAAYC,SAAA,CAEtBb,IAASc,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,MAAaC,SAAEb,KAC1CQ,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,OAAcC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,aAAa,kBAChCF,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWC,aAAa,qBAExCR,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,MAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oCACRC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACPC,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAAON,EAAAA,EAAAA,KAACO,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,GAAKF,GAAS,EAC3CG,KAAK,QACLnB,QAASA,EACToB,MAAO,CAAEC,UAAU,SAG3BjB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,MAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,0CACRC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACPC,OAAQ,SAAAQ,GAAA,IAAGN,EAAKM,EAALN,MAAK,OAAON,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,UAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKF,GAAK,IAAEL,KAAK,aAAa,EACpEQ,KAAK,WACLnB,QAASA,EACToB,MAAO,CAAEC,UAAU,SAG3BX,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CAACZ,KAAK,UAAUa,SAAS,SAAQf,SAAC,qCAKrD,E,oBC9BA,EAlBiB,WACb,IAAQgB,GAAkB/B,EAAAA,EAAAA,MAAlB+B,cACFC,GAAWC,EAAAA,EAAAA,MASjB,OANAxB,EAAAA,EAAAA,YAAU,WACFsB,GACAC,EAASE,EAAAA,EAAUC,EAAAA,EAAAA,OAE3B,GAAG,CAACJ,EAAeC,KAGfhB,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,MAAM,qEAAcC,UAAU,EAAOC,MAAO,CAAEC,MAAO,KAAMzB,UAC7DC,EAAAA,EAAAA,KAACyB,EAAS,KAGtB,C","sources":["webpack://4dev/./src/features/auth/LoginForm.module.scss?ab13","features/auth/LoginForm.tsx","pages/Main/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"LoginForm_error__E11ky\",\"hidden\":\"LoginForm_hidden__HXLgX\",\"group\":\"LoginForm_group__8PGQR\"};","import { useAuth } from 'app/providers/auth/AuthProvider';\r\nimport { Button, Input } from 'antd';\r\nimport { FC, useEffect } from 'react';\r\nimport styles from './LoginForm.module.scss';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nconst LoginForm: FC = () => {\r\n\r\n    const { login, error, setError } = useAuth();\r\n    const { control, handleSubmit, watch } = useForm();\r\n\r\n    const onSubmit = (data: any) => {\r\n        login(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        watch(() => {\r\n            if (!!error) {\r\n                setError('');\r\n            }\r\n        });\r\n    }, [error, setError, watch]);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            className={styles.form}\r\n        >\r\n            {error && <span className={styles.error}>{error}</span>}\r\n            <div className={styles.hidden}>\r\n                <input type=\"text\" autoComplete=\"new-password\" />\r\n                <input type=\"password\" autoComplete=\"new-password\" />\r\n            </div>\r\n            <div className={styles.group}>\r\n                <strong>Логин</strong>\r\n                <Controller\r\n                    render={({ field }) => <Input {...field} />}\r\n                    name=\"email\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                />\r\n            </div>\r\n            <div className={styles.group}>\r\n                <strong>Пароль</strong>\r\n                <Controller\r\n                    render={({ field }) => <Input.Password {...field} type=\"password\" />}\r\n                    name=\"password\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                />\r\n            </div>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Войти\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Card } from \"antd\";\nimport { LoginForm } from \"../../../features/auth\";\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../../app/providers/auth/AuthProvider';\nimport { AppRoutes, RoutePath } from '../../../shared/config/route';\n\n\nconst MainPage = () => {\n    const { authenticated } = useAuth();\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (authenticated) {\n            navigate(RoutePath[AppRoutes.TASKS]);\n        }\n    }, [authenticated, navigate]);\n\n    return (\n        <Card title=\"Авторизация\" bordered={false} style={{ width: 300 }}>\n            <LoginForm />\n        </Card>\n    );\n};\n\nexport default MainPage;\n"],"names":["_useAuth","useAuth","login","error","setError","_useForm","useForm","control","handleSubmit","watch","useEffect","_jsxs","onSubmit","data","className","styles","children","_jsx","type","autoComplete","Controller","render","_ref","field","Input","_objectSpread","name","rules","required","_ref2","Button","htmlType","authenticated","navigate","useNavigate","RoutePath","AppRoutes","Card","title","bordered","style","width","LoginForm"],"sourceRoot":""}