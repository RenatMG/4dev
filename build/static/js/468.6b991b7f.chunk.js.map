{"version":3,"file":"static/js/468.6b991b7f.chunk.js","mappings":"6OACA,GAAgB,MAAQ,yBAAyB,OAAS,0BAA0B,MAAQ,0B,mBC+D5F,EAzDsB,WAElB,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OACRE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAyCC,EAAAA,EAAAA,MAAjCC,EAAOF,EAAPE,QAASC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAEzBC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAS,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRvB,EAAOmB,GAAM,KAAD,EAArBE,EAAAG,MAERjB,EAAS,4IACZ,wBAAAc,EAAAI,OAAA,GAAAP,EAAA,KACJ,gBALaQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,KAed,OARAC,EAAAA,EAAAA,YAAU,WACNjB,GAAM,WACIN,GACFC,EAAS,GAEjB,GACJ,GAAG,CAACD,EAAOM,KAGPkB,EAAAA,EAAAA,MAAA,QACIjB,SAAUF,EAAaE,GACvBkB,UAAWC,EAAAA,KAAYC,SAAA,CAEtB3B,IAAS4B,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,MAAaC,SAAE3B,KAC1CwB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,OAAcC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,aAAa,kBAChCF,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWC,aAAa,qBAExCN,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oCACRC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACPC,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OAAON,EAAAA,EAAAA,KAACO,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,GAAKF,GAAS,EAC3CG,KAAK,QACLjC,QAASA,EACTkC,MAAO,CAAEC,UAAU,SAG3Bf,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,MAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,0CACRC,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAEPC,OAAQ,SAAAQ,GAAA,IAAGN,EAAKM,EAALN,MAAK,OAAON,EAAAA,EAAAA,KAACO,EAAAA,EAAAA,UAAcC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKF,GAAK,IAAEL,KAAK,aAAa,EACpEQ,KAAK,WACLjC,QAASA,EACTkC,MAAO,CAAEC,UAAU,SAG3BX,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CAACZ,KAAK,UAAUa,SAAS,SAAQf,SAAC,qCAKrD,E,oBCnCA,EAlBiB,WACb,IAAQgB,GAAehD,EAAAA,EAAAA,MAAfgD,WACFC,GAAWC,EAAAA,EAAAA,MASjB,OANAtB,EAAAA,EAAAA,YAAU,WACFoB,GACAC,EAASE,EAAAA,EAAUC,EAAAA,EAAAA,OAE3B,GAAG,CAACJ,EAAYC,KAGRhB,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,MAAM,qEAAcC,UAAU,EAAOC,MAAO,CAAEC,MAAO,KAAMzB,UAC7DC,EAAAA,EAAAA,KAACyB,EAAS,KAG1B,C","sources":["webpack://4dev/./src/features/auth/LoginForm.module.scss?ab13","features/auth/LoginForm.tsx","pages/Main/ui/MainPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"LoginForm_error__E11ky\",\"hidden\":\"LoginForm_hidden__HXLgX\",\"group\":\"LoginForm_group__8PGQR\"};","import { useAuth } from 'app/providers/auth/AuthProvider';\r\nimport { Button, Card, Form, Input } from 'antd';\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { Auth } from '../../shared/interfaces/auth.interface';\r\nimport styles from './LoginForm.module.scss';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nconst LoginForm: FC = () => {\r\n\r\n    const { signIn } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const { control, handleSubmit, watch } = useForm();\r\n\r\n    const onSubmit = async (data: any) => {\r\n        const result = await signIn(data);\r\n        if (!result) {\r\n            setError('Неверный логин или пароль!');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        watch(() => {\r\n            if (!!error) {\r\n                setError('');\r\n            }\r\n        });\r\n    }, [error, watch]);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            className={styles.form}\r\n        >\r\n            {error && <span className={styles.error}>{error}</span>}\r\n            <div className={styles.hidden}>\r\n                <input type=\"text\" autoComplete=\"new-password\" />\r\n                <input type=\"password\" autoComplete=\"new-password\" />\r\n            </div>\r\n            <div className={styles.group}>\r\n                <strong>Логин</strong>\r\n                <Controller\r\n                    render={({ field }) => <Input {...field} />}\r\n                    name=\"login\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                />\r\n            </div>\r\n            <div className={styles.group}>\r\n                <strong>Пароль</strong>\r\n                <Controller\r\n\r\n                    render={({ field }) => <Input.Password {...field} type=\"password\" />}\r\n                    name=\"password\"\r\n                    control={control}\r\n                    rules={{ required: true }}\r\n                />\r\n            </div>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Войти\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Card } from \"antd\";\nimport { LoginForm } from \"../../../features/auth\";\nimport styles from './MainPage.module.scss';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AppRoutes, RoutePath } from '../../../shared/config/route';\nimport { useAuth } from '../../../app/providers/auth/AuthProvider';\n\n\nconst MainPage = () => {\n    const { authorized } = useAuth();\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        if (authorized) {\n            navigate(RoutePath[AppRoutes.TASKS]);\n        }\n    }, [authorized, navigate]);\n\n    return (\n            <Card title=\"Авторизация\" bordered={false} style={{ width: 300 }}>\n                <LoginForm />\n            </Card>\n    );\n};\n\nexport default MainPage;\n"],"names":["signIn","useAuth","_useState","useState","_useState2","_slicedToArray","error","setError","_useForm","useForm","control","handleSubmit","watch","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","sent","stop","_x","apply","arguments","useEffect","_jsxs","className","styles","children","_jsx","type","autoComplete","Controller","render","_ref2","field","Input","_objectSpread","name","rules","required","_ref3","Button","htmlType","authorized","navigate","useNavigate","RoutePath","AppRoutes","Card","title","bordered","style","width","LoginForm"],"sourceRoot":""}